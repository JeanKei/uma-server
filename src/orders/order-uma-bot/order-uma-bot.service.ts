import { Injectable } from "@nestjs/common";
import { PrismaService } from "@/prisma.service";
import { TelegramService } from "@/telegram/telegram.service";
import {
  MODERATOR_UMA,
  TELEGRAM_GROUP_CHAT_ID,
} from "@/telegram/telegram.constants";
import { OrderUmaBotDto } from "./dto/order-uma-bot.dto";

@Injectable()
export class OrderUmaBotService {
  constructor(
    private readonly prisma: PrismaService,
    private readonly telegram: TelegramService
  ) {}

  async createOrder(dto: OrderUmaBotDto, userId: string) {
    const order = await this.prisma.orderUmaBot.create({
      data: {
        userId,
        title: dto.title,
        price: dto.price,
        priceYear: dto.priceYear,
      },
    });

    const user = await this.prisma.user.findUnique({
      where: { id: userId },
      select: { name: true, telegramId: true },
    });

    // –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    if (user?.telegramId) {
      await this.telegram.sendMessage(
        Number(user.telegramId),
        `üßæ –ó–∞—è–≤–∫–∞ <b>"UMA –ë–æ—Ç"</b>\n –¢–∞—Ä–∏—Ñ <b>${dto.title}</b> —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞. –ú—ã —Å–∫–æ—Ä–æ —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏.`,
        { parse_mode: "HTML" }
      );
    }

    // –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä—É UMA
    if (MODERATOR_UMA) {
      const message = `üì• –ù–æ–≤—ã–π –∑–∞–∫–∞–∑ UMA –ë–æ—Ç\nüë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: @${user?.name ?? "–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"}\nüì¶ –¢–∞—Ä–∏—Ñ: <b>${dto.title}</b>\nüí∞ –¶–µ–Ω–∞: ${dto.price}${dto.priceYear ? ` / ${dto.priceYear}` : ""}`;

      await this.telegram.sendMessage(MODERATOR_UMA, message, {
        parse_mode: "HTML",
      });

      if (TELEGRAM_GROUP_CHAT_ID) {
        await this.telegram.sendMessage(TELEGRAM_GROUP_CHAT_ID, message, {
          parse_mode: "HTML",
        });
      }
    }

    return { message: "–ó–∞—è–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞" };
  }
}
